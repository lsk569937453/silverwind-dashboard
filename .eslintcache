[{"/home/sliu/code/github/silverwind-dashboard/src/index.js":"1","/home/sliu/code/github/silverwind-dashboard/src/App.js":"2","/home/sliu/code/github/silverwind-dashboard/src/reportWebVitals.js":"3","/home/sliu/code/github/silverwind-dashboard/src/component/routerMap.js":"4","/home/sliu/code/github/silverwind-dashboard/src/utils/commonUtils.js":"5","/home/sliu/code/github/silverwind-dashboard/src/utils/axiosUtils.js":"6","/home/sliu/code/github/silverwind-dashboard/src/component/dashboardPage.jsx":"7","/home/sliu/code/github/silverwind-dashboard/src/component/configPage.jsx":"8","/home/sliu/code/github/silverwind-dashboard/src/component/ratelimit.jsx":"9","/home/sliu/code/github/silverwind-dashboard/src/component/allowDenyList.jsx":"10","/home/sliu/code/github/silverwind-dashboard/src/component/authentication.jsx":"11","/home/sliu/code/github/silverwind-dashboard/src/component/baseConfig.jsx":"12","/home/sliu/code/github/silverwind-dashboard/src/component/listenerListPage.jsx":"13","/home/sliu/code/github/silverwind-dashboard/src/component/startupPage.jsx":"14","/home/sliu/code/github/silverwind-dashboard/src/component/healthCheck.jsx":"15","/home/sliu/code/github/silverwind-dashboard/src/component/anomalyDetection.jsx":"16"},{"size":457,"mtime":1680143920991,"results":"17","hashOfConfig":"18"},{"size":2685,"mtime":1681179077919,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1680143920991,"results":"20","hashOfConfig":"18"},{"size":574,"mtime":1680360086153,"results":"21","hashOfConfig":"18"},{"size":1307,"mtime":1680183026398,"results":"22","hashOfConfig":"18"},{"size":3087,"mtime":1681179339578,"results":"23","hashOfConfig":"18"},{"size":4259,"mtime":1681179191653,"results":"24","hashOfConfig":"18"},{"size":24976,"mtime":1681179159763,"results":"25","hashOfConfig":"18"},{"size":8111,"mtime":1680185171419,"results":"26","hashOfConfig":"18"},{"size":4855,"mtime":1680885027749,"results":"27","hashOfConfig":"18"},{"size":4065,"mtime":1680185031983,"results":"28","hashOfConfig":"18"},{"size":17750,"mtime":1680969803736,"results":"29","hashOfConfig":"18"},{"size":5299,"mtime":1681179251706,"results":"30","hashOfConfig":"18"},{"size":3229,"mtime":1681179303503,"results":"31","hashOfConfig":"18"},{"size":5286,"mtime":1680920972356,"results":"32","hashOfConfig":"18"},{"size":4379,"mtime":1681179099837,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"quhyif",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sliu/code/github/silverwind-dashboard/src/index.js",[],["69","70"],"/home/sliu/code/github/silverwind-dashboard/src/App.js",["71","72"],"/home/sliu/code/github/silverwind-dashboard/src/reportWebVitals.js",[],"/home/sliu/code/github/silverwind-dashboard/src/component/routerMap.js",[],"/home/sliu/code/github/silverwind-dashboard/src/utils/commonUtils.js",["73","74"],"export default class CommonUtils {\n    /**\n     * 判断字符串是否为空\n     * @param str\n     * @returns {boolean}\n     */\n    static isNull(str) {\n        return str == null || str.length === 0 || str === '';\n    }\n    static guid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n \n    /**\n     *\n     * @desc  判断是否为身份证号\n     * @param  {String|Number} str\n     * @return {Boolean}\n     */\n    static isIdCard(str) {\n        return /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/.test(str)\n    }\n    static checkIsIPV4(entry) {\n        var blocks = entry.split(\".\");\n        if(blocks.length === 4) {\n          return blocks.every(function(block) {\n            return parseInt(block,10) >=0 && parseInt(block,10) <= 255;\n          });\n        }\n        return false;\n      }\n    /**\n     *\n     * @desc   判断是否为手机号\n     * @param  {String|Number} str\n     * @return {Boolean}\n     */\n    static isPhoneNum(str) {\n        return /^(0|86|17951)?(1[3-9][0-9])[0-9]{8}$/.test(str)\n    }\n}\n","/home/sliu/code/github/silverwind-dashboard/src/utils/axiosUtils.js",[],"/home/sliu/code/github/silverwind-dashboard/src/component/dashboardPage.jsx",["75","76"],"/home/sliu/code/github/silverwind-dashboard/src/component/configPage.jsx",["77","78"],"/home/sliu/code/github/silverwind-dashboard/src/component/ratelimit.jsx",[],"/home/sliu/code/github/silverwind-dashboard/src/component/allowDenyList.jsx",[],"/home/sliu/code/github/silverwind-dashboard/src/component/authentication.jsx",[],"/home/sliu/code/github/silverwind-dashboard/src/component/baseConfig.jsx",[],"/home/sliu/code/github/silverwind-dashboard/src/component/listenerListPage.jsx",["79","80"],"/home/sliu/code/github/silverwind-dashboard/src/component/startupPage.jsx",[],"/home/sliu/code/github/silverwind-dashboard/src/component/healthCheck.jsx",["81"],"import React from 'react'\nimport { Row, Col,  InputNumber,  Form, Input } from 'antd';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\nconst layout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 8,\n    },\n};\n\n\n\nfunction HealthCheck(props) {\n    // const [ratelimitType, setRatelimitType] = useState(\"None\");\n    // const [limitLocationType, setLimitLocationType] = useState(\"ip\");\n    const [form] = Form.useForm();\n\n    const healthCheckTypeSelectOption = () => {\n        return [\n            {\n                value: 'HttpGet',\n                label: 'Http Get',\n            },\n            {\n                value: 'None',\n                label: 'None',\n            },\n        ];\n    }\n    const handleHealthCheckTypeOptionOnChange = (value) => {\n        props.setHealthCheckData(previousState => ({\n            ...previousState,\n            healthCheckType: value\n        }));\n        // setRatelimitType(value);\n    };\n    const handleIntervalOnChange=(value)=>{\n        props.setHealthCheckData(previousState => ({\n            ...previousState,\n            interval: value\n        }));\n    }\n    const handleTimeoutOnChange=(value)=>{\n        props.setHealthCheckData(previousState => ({\n            ...previousState,\n            timeout: value\n        }));\n    }\n    const handleMinLivenessCountChange=(value)=>{\n        props.setLivenessConfigData(previousState => ({\n            ...previousState,\n            minLivenessCount: value\n        }));\n    }\n    const handlePathOnChange=(e)=>{\n        props.setHealthCheckData(previousState => ({\n            ...previousState,\n            path: e.target.value\n        }));\n    }\n    const onFinish = (values) => {\n        console.log(values);\n    };\n\n    const tokenBucketDiv = () => {\n        return (\n            <Row style={{ paddingTop: 20 }}>\n                <Col span={24} >\n                    <Form\n                        {...layout}\n                        form={form}\n                        name=\"control-hooks\"\n                        onFinish={onFinish}\n\n                    >\n                        <Form.Item\n                            name=\"interval\"\n                            label=\"Interval\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <InputNumber onChange={handleIntervalOnChange}   defaultValue={props.healthCheckData?.interval} min={1}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"timeout\"\n                            label=\"Timeout\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <InputNumber onChange={handleTimeoutOnChange}   defaultValue={props.healthCheckData?.timeout} min={1}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"minLivenessCount\"\n                            label=\"Min Liveness Count\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <InputNumber onChange={handleMinLivenessCountChange}   defaultValue={props.livenessConfigData?.minLivenessCount} min={1}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"path\"\n                            label=\"Path\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <Input onChange={handlePathOnChange}   defaultValue={props.healthCheckData?.path} min={1}/>\n                        </Form.Item>\n                        \n                        {/* <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item> */}\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n\n    return (\n        <div style={{ padding: 20 }}>\n            <Row>\n                <Col span={4} offset={6}>\n                    <Select\n                        defaultValue={props.healthCheckData?.healthCheckType?props.healthCheckData?.healthCheckType:\"None\"}\n                        style={{ width: 180 }}\n                        options={healthCheckTypeSelectOption()}\n                        onChange={handleHealthCheckTypeOptionOnChange}\n                    />\n                </Col>\n                <Col span={20}></Col>\n                <Col span={24}>\n                    {(!props.healthCheckData?.healthCheckType||props.healthCheckData.healthCheckType === \"None\") ? <></> : tokenBucketDiv()}\n                </Col>\n            </Row>\n        </div>\n    );\n\n\n}\nexport default HealthCheck;","/home/sliu/code/github/silverwind-dashboard/src/component/anomalyDetection.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":35,"column":20,"nodeType":"88","messageId":"89","endLine":35,"endColumn":31},{"ruleId":"86","severity":1,"message":"90","line":36,"column":16,"nodeType":"88","messageId":"89","endLine":36,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":13,"column":40,"nodeType":"93","messageId":"94","endLine":13,"endColumn":41},{"ruleId":"91","severity":1,"message":"92","line":13,"column":46,"nodeType":"93","messageId":"94","endLine":13,"endColumn":47},{"ruleId":"86","severity":1,"message":"90","line":45,"column":18,"nodeType":"88","messageId":"89","endLine":45,"endColumn":25},{"ruleId":"86","severity":1,"message":"95","line":47,"column":18,"nodeType":"88","messageId":"89","endLine":47,"endColumn":25},{"ruleId":"86","severity":1,"message":"96","line":31,"column":12,"nodeType":"88","messageId":"89","endLine":31,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":57,"column":8,"nodeType":"99","endLine":57,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":119,"column":25,"nodeType":"103","endLine":119,"endColumn":102},{"ruleId":"101","severity":1,"message":"102","line":122,"column":25,"nodeType":"103","endLine":122,"endColumn":104},{"ruleId":"86","severity":1,"message":"104","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":15},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'setHasLogin' is assigned a value but never used.","Identifier","unusedVar","'setHost' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&' and '|'. Use parentheses to clarify the intended order of operations.","BinaryExpression","unexpectedMixedOperator","'setPort' is assigned a value but never used.","'appConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'requestAppConfig' and 'searchParam'. Either include them or remove the dependency array.","ArrayExpression",["107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [requestAppConfig, searchParam]",{"range":"110","text":"111"},[2011,2013],"[requestAppConfig, searchParam]"]